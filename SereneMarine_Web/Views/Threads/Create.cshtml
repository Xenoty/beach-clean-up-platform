@model SereneMarine_Web.ViewModels.Threads.ThreadUpdateViewModel

@{
    ViewBag.Title = "Create Thread";
}

@if (TempData["ApiError"] != null)
{
    <div class="alert-danger">
        <strong>@TempData["ApiError"].ToString()</strong>
    </div>
}

@if (TempData["response"] != null)
{
    <div class="alert-success">
        <strong>@TempData["response"].ToString()</strong>
    </div>
}

@if (TempData["RoutingError"] != null)
{
    <div class="alert-danger">
        <strong>@TempData["RoutingError"].ToString()</strong>
    </div>
}

<div>
    @Html.ActionLink("Back to Threads", "Index")
</div>


@using (Html.BeginForm("Create", "Threads", FormMethod.Post))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @if (ViewBag.ApiError != null)
        {
            <div class="alert-danger">
                <strong>@ViewBag.ApiError.StatusCode.ToString()</strong>
                <strong>@ViewBag.ApiError.Content.ToString()</strong>
            </div>
        }
        @if (ViewBag.Response != null)
        {
            <div class="alert-success">
                <strong>@ViewBag.Response.ToString()</strong>
            </div>
        }
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @await Html.PartialAsync("_ThreadEditCreatePartial", Model)
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-success" />
            </div>
        </div>
    </div>
}